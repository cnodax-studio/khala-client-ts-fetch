/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { ApiV1ChatsChatIdMessagesGet200Response, ApiV1ChatsChatIdMessagesPost200Response, ApiV1ChatsChatIdMessagesPostRequest } from '../models';
export interface ApiV1ChatsChatIdMessagesGetRequest {
    chatId: string;
    limit: number;
    offset?: number;
}
export interface ApiV1ChatsChatIdMessagesMessageIdContentGetRequest {
    chatId: string;
    messageId: string;
}
export interface ApiV1ChatsChatIdMessagesMessageIdGetRequest {
    chatId: string;
    messageId: string;
}
export interface ApiV1ChatsChatIdMessagesPostOperationRequest {
    chatId: string;
    payload: ApiV1ChatsChatIdMessagesPostRequest;
}
/**
 *
 */
export declare class MessagingApi extends runtime.BaseAPI {
    /**
     * Get chat messages
     */
    apiV1ChatsChatIdMessagesGetRaw(requestParameters: ApiV1ChatsChatIdMessagesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1ChatsChatIdMessagesGet200Response>>;
    /**
     * Get chat messages
     */
    apiV1ChatsChatIdMessagesGet(requestParameters: ApiV1ChatsChatIdMessagesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1ChatsChatIdMessagesGet200Response>;
    /**
     * Get message content in specific chat
     */
    apiV1ChatsChatIdMessagesMessageIdContentGetRaw(requestParameters: ApiV1ChatsChatIdMessagesMessageIdContentGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Get message content in specific chat
     */
    apiV1ChatsChatIdMessagesMessageIdContentGet(requestParameters: ApiV1ChatsChatIdMessagesMessageIdContentGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get message in specific chat
     */
    apiV1ChatsChatIdMessagesMessageIdGetRaw(requestParameters: ApiV1ChatsChatIdMessagesMessageIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1ChatsChatIdMessagesPost200Response>>;
    /**
     * Get message in specific chat
     */
    apiV1ChatsChatIdMessagesMessageIdGet(requestParameters: ApiV1ChatsChatIdMessagesMessageIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1ChatsChatIdMessagesPost200Response>;
    /**
     * Possible crypt_algorithm: \"none\", \"aes-256-cbc\". Possible compress_algorithm: \"none\", \"zlib-deflate\". <br> Mime must be a valid mime type. Available mime type you cat find here: https://github.com/gabriel-vasile/mimetype/blob/master/supported_mimes.md
     * Send message in specific chat
     */
    apiV1ChatsChatIdMessagesPostRaw(requestParameters: ApiV1ChatsChatIdMessagesPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1ChatsChatIdMessagesPost200Response>>;
    /**
     * Possible crypt_algorithm: \"none\", \"aes-256-cbc\". Possible compress_algorithm: \"none\", \"zlib-deflate\". <br> Mime must be a valid mime type. Available mime type you cat find here: https://github.com/gabriel-vasile/mimetype/blob/master/supported_mimes.md
     * Send message in specific chat
     */
    apiV1ChatsChatIdMessagesPost(requestParameters: ApiV1ChatsChatIdMessagesPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1ChatsChatIdMessagesPost200Response>;
}
