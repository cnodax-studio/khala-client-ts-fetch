"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageMessageToJSON = exports.MessageMessageFromJSONTyped = exports.MessageMessageFromJSON = exports.instanceOfMessageMessage = exports.MessageMessageCryptAlgorithmEnum = exports.MessageMessageCompressAlgorithmEnum = void 0;
const runtime_1 = require("../runtime");
const AuthUser_1 = require("./AuthUser");
const ChatChat_1 = require("./ChatChat");
/**
 * @export
 */
exports.MessageMessageCompressAlgorithmEnum = {
    None: 'none',
    ZlibDeflate: 'zlib-deflate'
};
/**
 * @export
 */
exports.MessageMessageCryptAlgorithmEnum = {
    None: 'none',
    Aes256Cbc: 'aes-256-cbc'
};
/**
 * Check if a given object implements the MessageMessage interface.
 */
function instanceOfMessageMessage(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfMessageMessage = instanceOfMessageMessage;
function MessageMessageFromJSON(json) {
    return MessageMessageFromJSONTyped(json, false);
}
exports.MessageMessageFromJSON = MessageMessageFromJSON;
function MessageMessageFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'chat': !(0, runtime_1.exists)(json, 'chat') ? undefined : (0, ChatChat_1.ChatChatFromJSON)(json['chat']),
        'compressAlgorithm': !(0, runtime_1.exists)(json, 'compress_algorithm') ? undefined : json['compress_algorithm'],
        'content': !(0, runtime_1.exists)(json, 'content') ? undefined : json['content'],
        'cryptAlgorithm': !(0, runtime_1.exists)(json, 'crypt_algorithm') ? undefined : json['crypt_algorithm'],
        'date': !(0, runtime_1.exists)(json, 'date') ? undefined : json['date'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'mime': !(0, runtime_1.exists)(json, 'mime') ? undefined : json['mime'],
        'user': !(0, runtime_1.exists)(json, 'user') ? undefined : (0, AuthUser_1.AuthUserFromJSON)(json['user']),
    };
}
exports.MessageMessageFromJSONTyped = MessageMessageFromJSONTyped;
function MessageMessageToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'chat': (0, ChatChat_1.ChatChatToJSON)(value.chat),
        'compress_algorithm': value.compressAlgorithm,
        'content': value.content,
        'crypt_algorithm': value.cryptAlgorithm,
        'date': value.date,
        'id': value.id,
        'mime': value.mime,
        'user': (0, AuthUser_1.AuthUserToJSON)(value.user),
    };
}
exports.MessageMessageToJSON = MessageMessageToJSON;
