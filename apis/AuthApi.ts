/* tslint:disable */
/* eslint-disable */
/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV1LoginPost200Response,
  ApiV1LoginPostRequest,
  ApiV1RegisterPostRequest,
  Get404Response,
} from '../models/index';
import {
    ApiV1LoginPost200ResponseFromJSON,
    ApiV1LoginPost200ResponseToJSON,
    ApiV1LoginPostRequestFromJSON,
    ApiV1LoginPostRequestToJSON,
    ApiV1RegisterPostRequestFromJSON,
    ApiV1RegisterPostRequestToJSON,
    Get404ResponseFromJSON,
    Get404ResponseToJSON,
} from '../models/index';

export interface ApiV1LoginPostOperationRequest {
    payload: ApiV1LoginPostRequest;
}

export interface ApiV1RegisterPostOperationRequest {
    payload: ApiV1RegisterPostRequest;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     * Login
     */
    async apiV1LoginPostRaw(requestParameters: ApiV1LoginPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1LoginPost200Response>> {
        if (requestParameters.payload === null || requestParameters.payload === undefined) {
            throw new runtime.RequiredError('payload','Required parameter requestParameters.payload was null or undefined when calling apiV1LoginPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1LoginPostRequestToJSON(requestParameters.payload),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1LoginPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Login
     */
    async apiV1LoginPost(requestParameters: ApiV1LoginPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1LoginPost200Response> {
        const response = await this.apiV1LoginPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Register
     */
    async apiV1RegisterPostRaw(requestParameters: ApiV1RegisterPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1LoginPost200Response>> {
        if (requestParameters.payload === null || requestParameters.payload === undefined) {
            throw new runtime.RequiredError('payload','Required parameter requestParameters.payload was null or undefined when calling apiV1RegisterPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1RegisterPostRequestToJSON(requestParameters.payload),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1LoginPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Register
     */
    async apiV1RegisterPost(requestParameters: ApiV1RegisterPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1LoginPost200Response> {
        const response = await this.apiV1RegisterPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
