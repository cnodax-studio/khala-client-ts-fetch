/* tslint:disable */
/* eslint-disable */
/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthUser } from './AuthUser';
import {
    AuthUserFromJSON,
    AuthUserFromJSONTyped,
    AuthUserToJSON,
} from './AuthUser';

/**
 * 
 * @export
 * @interface AuthSession
 */
export interface AuthSession {
    /**
     * 
     * @type {string}
     * @memberof AuthSession
     */
    agent?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthSession
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthSession
     */
    ip?: string;
    /**
     * 
     * @type {AuthUser}
     * @memberof AuthSession
     */
    user?: AuthUser;
}

/**
 * Check if a given object implements the AuthSession interface.
 */
export function instanceOfAuthSession(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthSessionFromJSON(json: any): AuthSession {
    return AuthSessionFromJSONTyped(json, false);
}

export function AuthSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthSession {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agent': !exists(json, 'agent') ? undefined : json['agent'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ip': !exists(json, 'ip') ? undefined : json['ip'],
        'user': !exists(json, 'user') ? undefined : AuthUserFromJSON(json['user']),
    };
}

export function AuthSessionToJSON(value?: AuthSession | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'agent': value.agent,
        'id': value.id,
        'ip': value.ip,
        'user': AuthUserToJSON(value.user),
    };
}

