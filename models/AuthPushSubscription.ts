/* tslint:disable */
/* eslint-disable */
/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthPushSubscriptionType } from './AuthPushSubscriptionType';
import {
    AuthPushSubscriptionTypeFromJSON,
    AuthPushSubscriptionTypeFromJSONTyped,
    AuthPushSubscriptionTypeToJSON,
} from './AuthPushSubscriptionType';

/**
 * 
 * @export
 * @interface AuthPushSubscription
 */
export interface AuthPushSubscription {
    /**
     * 
     * @type {string}
     * @memberof AuthPushSubscription
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthPushSubscription
     */
    sessionId?: string;
    /**
     * 
     * @type {AuthPushSubscriptionType}
     * @memberof AuthPushSubscription
     */
    type?: AuthPushSubscriptionType;
}

/**
 * Check if a given object implements the AuthPushSubscription interface.
 */
export function instanceOfAuthPushSubscription(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthPushSubscriptionFromJSON(json: any): AuthPushSubscription {
    return AuthPushSubscriptionFromJSONTyped(json, false);
}

export function AuthPushSubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthPushSubscription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'sessionId': !exists(json, 'session_id') ? undefined : json['session_id'],
        'type': !exists(json, 'type') ? undefined : AuthPushSubscriptionTypeFromJSON(json['type']),
    };
}

export function AuthPushSubscriptionToJSON(value?: AuthPushSubscription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'session_id': value.sessionId,
        'type': AuthPushSubscriptionTypeToJSON(value.type),
    };
}

