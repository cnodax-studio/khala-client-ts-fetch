/* tslint:disable */
/* eslint-disable */
/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FileAccessor } from './FileAccessor';
import {
    FileAccessorFromJSON,
    FileAccessorFromJSONTyped,
    FileAccessorToJSON,
} from './FileAccessor';

/**
 * 
 * @export
 * @interface FileMeta
 */
export interface FileMeta {
    /**
     * 
     * @type {FileAccessor}
     * @memberof FileMeta
     */
    accessor?: FileAccessor;
    /**
     * 
     * @type {string}
     * @memberof FileMeta
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof FileMeta
     */
    messageId?: string;
    /**
     * 
     * @type {string}
     * @memberof FileMeta
     */
    mime?: string;
    /**
     * 
     * @type {number}
     * @memberof FileMeta
     */
    size?: number;
}

/**
 * Check if a given object implements the FileMeta interface.
 */
export function instanceOfFileMeta(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FileMetaFromJSON(json: any): FileMeta {
    return FileMetaFromJSONTyped(json, false);
}

export function FileMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessor': !exists(json, 'accessor') ? undefined : FileAccessorFromJSON(json['accessor']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'messageId': !exists(json, 'message_id') ? undefined : json['message_id'],
        'mime': !exists(json, 'mime') ? undefined : json['mime'],
        'size': !exists(json, 'size') ? undefined : json['size'],
    };
}

export function FileMetaToJSON(value?: FileMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessor': FileAccessorToJSON(value.accessor),
        'id': value.id,
        'message_id': value.messageId,
        'mime': value.mime,
        'size': value.size,
    };
}

