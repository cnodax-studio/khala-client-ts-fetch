/* tslint:disable */
/* eslint-disable */
/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthSession } from './AuthSession';
import {
    AuthSessionFromJSON,
    AuthSessionFromJSONTyped,
    AuthSessionToJSON,
} from './AuthSession';

/**
 * 
 * @export
 * @interface ApiV1SessionsGet200Response
 */
export interface ApiV1SessionsGet200Response {
    /**
     * 
     * @type {Array<AuthSession>}
     * @memberof ApiV1SessionsGet200Response
     */
    data?: Array<AuthSession>;
    /**
     * 
     * @type {string}
     * @memberof ApiV1SessionsGet200Response
     */
    status?: string;
}

/**
 * Check if a given object implements the ApiV1SessionsGet200Response interface.
 */
export function instanceOfApiV1SessionsGet200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApiV1SessionsGet200ResponseFromJSON(json: any): ApiV1SessionsGet200Response {
    return ApiV1SessionsGet200ResponseFromJSONTyped(json, false);
}

export function ApiV1SessionsGet200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiV1SessionsGet200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(AuthSessionFromJSON)),
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function ApiV1SessionsGet200ResponseToJSON(value?: ApiV1SessionsGet200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(AuthSessionToJSON)),
        'status': value.status,
    };
}

