/* tslint:disable */
/* eslint-disable */
/**
 * Khalad API
 * This is open source Khala server implementation.
 *
 * The version of the OpenAPI document: 0.1.0-alpha.1
 * Contact: info@cnodax.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthUser } from './AuthUser';
import {
    AuthUserFromJSON,
    AuthUserFromJSONTyped,
    AuthUserToJSON,
} from './AuthUser';

/**
 * 
 * @export
 * @interface ChatChat
 */
export interface ChatChat {
    /**
     * 
     * @type {AuthUser}
     * @memberof ChatChat
     */
    creator?: AuthUser;
    /**
     * 
     * @type {string}
     * @memberof ChatChat
     */
    id?: string;
    /**
     * 
     * @type {Array<AuthUser>}
     * @memberof ChatChat
     */
    members?: Array<AuthUser>;
    /**
     * 
     * @type {string}
     * @memberof ChatChat
     */
    name?: string;
}

/**
 * Check if a given object implements the ChatChat interface.
 */
export function instanceOfChatChat(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChatChatFromJSON(json: any): ChatChat {
    return ChatChatFromJSONTyped(json, false);
}

export function ChatChatFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatChat {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creator': !exists(json, 'creator') ? undefined : AuthUserFromJSON(json['creator']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'members': !exists(json, 'members') ? undefined : ((json['members'] as Array<any>).map(AuthUserFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function ChatChatToJSON(value?: ChatChat | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'creator': AuthUserToJSON(value.creator),
        'id': value.id,
        'members': value.members === undefined ? undefined : ((value.members as Array<any>).map(AuthUserToJSON)),
        'name': value.name,
    };
}

